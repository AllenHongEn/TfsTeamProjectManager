<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:TeamProjectManager.Common.Converters;assembly=TeamProjectManager.Common">

    <SolidColorBrush x:Key="TextBrush" Color="Pink" />
    <SolidColorBrush x:Key="AccentBrush" Color="#F09609" />
    <SolidColorBrush x:Key="LinkBrush" Color="#2470E3" />
    <SolidColorBrush x:Key="UserMessageFontBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="ErrorForegroundBrush" Color="#E51400" />
    <SolidColorBrush x:Key="WarningForegroundBrush" Color="Orange" />
    <SolidColorBrush x:Key="SuccessForegroundBrush" Color="#50DD50" />
    <SolidColorBrush x:Key="BorderBrush" Color="#FF747474" />
    <SolidColorBrush x:Key="SelectedTabTextBrush" Color="Black" />
    <SolidColorBrush x:Key="UnSelectedTabTextBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="ActiveTabTextBrush" Color="Gray" />

    <c:EnumToBooleanConverter x:Key="enumConverter" />
    <c:CaseConverter x:Key="caseConverter" />
    <c:SingleLineConverter x:Key="singleLineConverter" />

    <Style TargetType="{x:Type Grid}" />
    <Style TargetType="{x:Type ProgressBar}" />

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
        <GradientStop Color="#FFFFFF" Offset="0.3"/>
        <GradientStop Color="#BBC5D7" Offset="0.75"/>
        <GradientStop Color="#6D83A9" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ResizeGripThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="Right" Margin="0,0,2,2" VerticalAlignment="Bottom" Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z">
                            <Path.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" ViewboxUnits="Absolute" Viewport="0,0,3,3" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="SeparatingLabel">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="0,10,0,5" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderBrush="{StaticResource AccentBrush}" BorderThickness="0,0,0,1" Margin="0,0,0,5">
                            <TabPanel IsItemsHost="true"/>
                        </Border>
                        <ContentPresenter Grid.Row="1" ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ContentControl Margin="0,5,10,5" x:Name="tabHeader" Foreground="{StaticResource UnSelectedTabTextBrush}" FontWeight="DemiBold">
                        <TextBlock Text="{TemplateBinding Header, Converter={StaticResource caseConverter}}" />
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SelectedTabTextBrush}" TargetName="tabHeader" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Border.IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource ActiveTabTextBrush}" TargetName="tabHeader" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab Items With Headers -->
    <Style x:Key="ShellTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Header" Value="{Binding Path=Content.DataContext.HeaderInfo, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True" />
    </Style>

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource LinkBrush}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextDecorations" Value="None" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>